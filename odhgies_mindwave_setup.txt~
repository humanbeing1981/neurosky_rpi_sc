#INSTUCTION HOW TO CONNECT NEUROSKY MINDWAVE TO RPI AND USE SUPERCOLLIDER TO MAKE MUSIC USING YOUR BRAINWAVES

##FIRST STEP


For python to be able to parse binary code from neyrosky mindwave it needs the following module

https://pypi.python.org/pypi/NeuroPy/0.1

download or clone and install

##STEP TWO

Create 2 executable files:
The first file should be created with

$ touch jacksclangstart.sh #you can use any name

Then edit it using your favorite editor (I use emacs you can also use nano)

$ sudo emacs jacksclangstart.sh

Copy & paste the following in the file

#!/bin/sh 
/usr/local/bin/jackd -P75 -dalsa -dhw:1 -p1024 -n3 -s -r44100 & 
sleep 1 
su root -c "sclang -D /home/pi/neucode.scd" #where (neucode.scd) will be your SuperCollider script

Then create the second file 

$ touch rfconnect.sh #you can use any name

Then edit it using your favorite editor (I use emacs you can also use nano)

$ sudo emacs rfconnect.sh 

Then copy $ paste the following in the file

rfcomm connect 0 XX:XX:XX:XX:XX  #where you place the code for bluetooth of your device(neurosky mindwave-it is usually within the box)

if not the try:

$ hcitool scan

and you should see the mindwave device (have it on pairing mode first)

##STEP THREE	

Assuming you already habe a python script ready now its time to create an autostart procedure with crontab so every time you boot the Rpi It should run 4 things:

1. the jack driver
2. the sc script
3. the bluetooth connection
4. the python script

At the terminal type:

$ sudo crontab -e

Then paste the following:


@reboot /home/pi/rfconnect.sh 
@reboot /bin/sh /home/pi/jacksclangstart.sh 
@reboot sleep 15; python /home/pi/mind_test.py &   #where (mind_test.py) shoyld be your python script file


##THAT SHOULD DO IT 

Reboot est voila!




##CODE EXAMPLE FOR PYTHON USING THE “neuroPy” MODULE



from NeuroPy import NeuroPy 
import time 
object1=NeuroPy('/dev/rfcomm0') 
time.sleep(2) 

object1.start() 

def attention_callback(attention_value): 
    "this function will be called everytime NeuroPy has a new value for attention" 
    print "Value of attention is",attention_value 
    #do other stuff (fire a rocket), based on the obtained value of attention_value 
    #do some more stuff 
    return None 

#set call back: 
object1.setCallBack("attention",attention_callback) 

#call start method 
object1.start() 

while True: 
    if(object1.meditation>70): #another way of accessing data provided by headset (1st being call backs) 
        object1.stop()         #if meditation level reaches above 70, stop fetching data from the headset 







#other variables: attention,meditation,rawValue,delta,theta,lowAlpha,highAlpha,lowBeta,highBeta,lowGamma,midGamma, poorSignal and blinkStrength 




##SUPECOLLIDER CODE SCRIPT EXAMPLE

sudo sclang neucode.scd


(
s.waitForBoot
{
        {       SynthDef.new(\noise, {
                        arg freq=440, amp=0.2, pha = 0;
                        var sig, env, sig2, gen;

                        sig=SinOsc.ar (freq, 0.05);
                        sig2=LFTri.ar (freq, 0.08) ;
                        env = Env.triangle(4, amp);
                        gen = EnvGen.kr(env, doneAction: 2);

                        sig=[sig+sig2]*gen;
                        Out.ar(0,(sig * amp).dup);

                }).play;
                5.wait;

                OSCdef.new(
                        \bang,
                        {
                                arg msg, time, addr, port;
                                [msg, time, addr, port].postln;

                                Synth(\noise, [freq:msg[1] * 100]);

                        },'/bang'
                )
}.fork;
}
)




##GOOD LUCK


